/*
 * DynamiaTools API
 * DynamiaTools Metadata API
 *
 * The version of the OpenAPI document: 5.3.6
 * Contact: mario@dynamiasoluciones.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tools.dynamia.clients.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import tools.dynamia.clients.model.ActionRef;
import tools.dynamia.clients.model.Field;
import tools.dynamia.clients.model.FieldGroup;
import tools.dynamia.clients.model.ViewLayout;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ViewDescriptor
 */
@JsonPropertyOrder({
  ViewDescriptor.JSON_PROPERTY_FIELDS,
  ViewDescriptor.JSON_PROPERTY_ACTIONS,
  ViewDescriptor.JSON_PROPERTY_ID,
  ViewDescriptor.JSON_PROPERTY_LAYOUT,
  ViewDescriptor.JSON_PROPERTY_EXTENDS,
  ViewDescriptor.JSON_PROPERTY_AUTOFIELDS,
  ViewDescriptor.JSON_PROPERTY_DEVICE,
  ViewDescriptor.JSON_PROPERTY_VIEW_TYPE_NAME,
  ViewDescriptor.JSON_PROPERTY_MESSAGES,
  ViewDescriptor.JSON_PROPERTY_FIELD_GROUPS,
  ViewDescriptor.JSON_PROPERTY_PARAMS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-13T13:27:54.300070628-05:00[America/Bogota]", comments = "Generator version: 7.12.0")
public class ViewDescriptor {
  public static final String JSON_PROPERTY_FIELDS = "fields";
  @jakarta.annotation.Nullable
  private List<Field> fields = new ArrayList<>();

  public static final String JSON_PROPERTY_ACTIONS = "actions";
  @jakarta.annotation.Nullable
  private List<ActionRef> actions = new ArrayList<>();

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_LAYOUT = "layout";
  @jakarta.annotation.Nullable
  private ViewLayout layout;

  public static final String JSON_PROPERTY_EXTENDS = "extends";
  @jakarta.annotation.Nullable
  private String _extends;

  public static final String JSON_PROPERTY_AUTOFIELDS = "autofields";
  @jakarta.annotation.Nullable
  private Boolean autofields;

  public static final String JSON_PROPERTY_DEVICE = "device";
  @jakarta.annotation.Nullable
  private String device;

  public static final String JSON_PROPERTY_VIEW_TYPE_NAME = "viewTypeName";
  @jakarta.annotation.Nullable
  private String viewTypeName;

  public static final String JSON_PROPERTY_MESSAGES = "messages";
  @jakarta.annotation.Nullable
  private String messages;

  public static final String JSON_PROPERTY_FIELD_GROUPS = "fieldGroups";
  @jakarta.annotation.Nullable
  private List<FieldGroup> fieldGroups = new ArrayList<>();

  public static final String JSON_PROPERTY_PARAMS = "params";
  @jakarta.annotation.Nullable
  private Map<String, Object> params = new HashMap<>();

  public ViewDescriptor() {
  }

  public ViewDescriptor fields(@jakarta.annotation.Nullable List<Field> fields) {
    
    this.fields = fields;
    return this;
  }

  public ViewDescriptor addFieldsItem(Field fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Field> getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFields(@jakarta.annotation.Nullable List<Field> fields) {
    this.fields = fields;
  }

  public ViewDescriptor actions(@jakarta.annotation.Nullable List<ActionRef> actions) {
    
    this.actions = actions;
    return this;
  }

  public ViewDescriptor addActionsItem(ActionRef actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<>();
    }
    this.actions.add(actionsItem);
    return this;
  }

  /**
   * Get actions
   * @return actions
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ActionRef> getActions() {
    return actions;
  }


  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActions(@jakarta.annotation.Nullable List<ActionRef> actions) {
    this.actions = actions;
  }

  public ViewDescriptor id(@jakarta.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }

  public ViewDescriptor layout(@jakarta.annotation.Nullable ViewLayout layout) {
    
    this.layout = layout;
    return this;
  }

  /**
   * Get layout
   * @return layout
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ViewLayout getLayout() {
    return layout;
  }


  @JsonProperty(JSON_PROPERTY_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLayout(@jakarta.annotation.Nullable ViewLayout layout) {
    this.layout = layout;
  }

  public ViewDescriptor _extends(@jakarta.annotation.Nullable String _extends) {
    
    this._extends = _extends;
    return this;
  }

  /**
   * Get _extends
   * @return _extends
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTENDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExtends() {
    return _extends;
  }


  @JsonProperty(JSON_PROPERTY_EXTENDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtends(@jakarta.annotation.Nullable String _extends) {
    this._extends = _extends;
  }

  public ViewDescriptor autofields(@jakarta.annotation.Nullable Boolean autofields) {
    
    this.autofields = autofields;
    return this;
  }

  /**
   * Get autofields
   * @return autofields
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTOFIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutofields() {
    return autofields;
  }


  @JsonProperty(JSON_PROPERTY_AUTOFIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutofields(@jakarta.annotation.Nullable Boolean autofields) {
    this.autofields = autofields;
  }

  public ViewDescriptor device(@jakarta.annotation.Nullable String device) {
    
    this.device = device;
    return this;
  }

  /**
   * Get device
   * @return device
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDevice() {
    return device;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDevice(@jakarta.annotation.Nullable String device) {
    this.device = device;
  }

  public ViewDescriptor viewTypeName(@jakarta.annotation.Nullable String viewTypeName) {
    
    this.viewTypeName = viewTypeName;
    return this;
  }

  /**
   * Get viewTypeName
   * @return viewTypeName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIEW_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getViewTypeName() {
    return viewTypeName;
  }


  @JsonProperty(JSON_PROPERTY_VIEW_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewTypeName(@jakarta.annotation.Nullable String viewTypeName) {
    this.viewTypeName = viewTypeName;
  }

  public ViewDescriptor messages(@jakarta.annotation.Nullable String messages) {
    
    this.messages = messages;
    return this;
  }

  /**
   * Get messages
   * @return messages
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessages() {
    return messages;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessages(@jakarta.annotation.Nullable String messages) {
    this.messages = messages;
  }

  public ViewDescriptor fieldGroups(@jakarta.annotation.Nullable List<FieldGroup> fieldGroups) {
    
    this.fieldGroups = fieldGroups;
    return this;
  }

  public ViewDescriptor addFieldGroupsItem(FieldGroup fieldGroupsItem) {
    if (this.fieldGroups == null) {
      this.fieldGroups = new ArrayList<>();
    }
    this.fieldGroups.add(fieldGroupsItem);
    return this;
  }

  /**
   * Get fieldGroups
   * @return fieldGroups
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FieldGroup> getFieldGroups() {
    return fieldGroups;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldGroups(@jakarta.annotation.Nullable List<FieldGroup> fieldGroups) {
    this.fieldGroups = fieldGroups;
  }

  public ViewDescriptor params(@jakarta.annotation.Nullable Map<String, Object> params) {
    
    this.params = params;
    return this;
  }

  public ViewDescriptor putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

  /**
   * Get params
   * @return params
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getParams() {
    return params;
  }


  @JsonProperty(JSON_PROPERTY_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParams(@jakarta.annotation.Nullable Map<String, Object> params) {
    this.params = params;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViewDescriptor viewDescriptor = (ViewDescriptor) o;
    return Objects.equals(this.fields, viewDescriptor.fields) &&
        Objects.equals(this.actions, viewDescriptor.actions) &&
        Objects.equals(this.id, viewDescriptor.id) &&
        Objects.equals(this.layout, viewDescriptor.layout) &&
        Objects.equals(this._extends, viewDescriptor._extends) &&
        Objects.equals(this.autofields, viewDescriptor.autofields) &&
        Objects.equals(this.device, viewDescriptor.device) &&
        Objects.equals(this.viewTypeName, viewDescriptor.viewTypeName) &&
        Objects.equals(this.messages, viewDescriptor.messages) &&
        Objects.equals(this.fieldGroups, viewDescriptor.fieldGroups) &&
        Objects.equals(this.params, viewDescriptor.params);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fields, actions, id, layout, _extends, autofields, device, viewTypeName, messages, fieldGroups, params);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewDescriptor {\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    layout: ").append(toIndentedString(layout)).append("\n");
    sb.append("    _extends: ").append(toIndentedString(_extends)).append("\n");
    sb.append("    autofields: ").append(toIndentedString(autofields)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    viewTypeName: ").append(toIndentedString(viewTypeName)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    fieldGroups: ").append(toIndentedString(fieldGroups)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

