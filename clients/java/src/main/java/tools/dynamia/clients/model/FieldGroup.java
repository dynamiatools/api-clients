/*
 * DynamiaTools API
 * DynamiaTools Metadata API
 *
 * The version of the OpenAPI document: 5.3.6
 * Contact: mario@dynamiasoluciones.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tools.dynamia.clients.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FieldGroup
 */
@JsonPropertyOrder({
  FieldGroup.JSON_PROPERTY_NAME,
  FieldGroup.JSON_PROPERTY_LABEL,
  FieldGroup.JSON_PROPERTY_DESCRIPTION,
  FieldGroup.JSON_PROPERTY_ICON,
  FieldGroup.JSON_PROPERTY_INDEX,
  FieldGroup.JSON_PROPERTY_COLLAPSE,
  FieldGroup.JSON_PROPERTY_PARAMS,
  FieldGroup.JSON_PROPERTY_LOCALIZED_LABEL,
  FieldGroup.JSON_PROPERTY_FIELDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class FieldGroup {
  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_LABEL = "label";
  @jakarta.annotation.Nullable
  private String label;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_ICON = "icon";
  @jakarta.annotation.Nullable
  private String icon;

  public static final String JSON_PROPERTY_INDEX = "index";
  @jakarta.annotation.Nullable
  private Integer index;

  public static final String JSON_PROPERTY_COLLAPSE = "collapse";
  @jakarta.annotation.Nullable
  private Boolean collapse;

  public static final String JSON_PROPERTY_PARAMS = "params";
  @jakarta.annotation.Nullable
  private Map<String, Object> params = new HashMap<>();

  public static final String JSON_PROPERTY_LOCALIZED_LABEL = "localizedLabel";
  @jakarta.annotation.Nullable
  private String localizedLabel;

  public static final String JSON_PROPERTY_FIELDS = "fields";
  @jakarta.annotation.Nullable
  private List<String> fields = new ArrayList<>();

  public FieldGroup() {
  }

  public FieldGroup name(@jakarta.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }

  public FieldGroup label(@jakarta.annotation.Nullable String label) {
    
    this.label = label;
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(@jakarta.annotation.Nullable String label) {
    this.label = label;
  }

  public FieldGroup description(@jakarta.annotation.Nullable String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }

  public FieldGroup icon(@jakarta.annotation.Nullable String icon) {
    
    this.icon = icon;
    return this;
  }

  /**
   * Get icon
   * @return icon
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(@jakarta.annotation.Nullable String icon) {
    this.icon = icon;
  }

  public FieldGroup index(@jakarta.annotation.Nullable Integer index) {
    
    this.index = index;
    return this;
  }

  /**
   * Get index
   * @return index
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndex(@jakarta.annotation.Nullable Integer index) {
    this.index = index;
  }

  public FieldGroup collapse(@jakarta.annotation.Nullable Boolean collapse) {
    
    this.collapse = collapse;
    return this;
  }

  /**
   * Get collapse
   * @return collapse
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLLAPSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCollapse() {
    return collapse;
  }


  @JsonProperty(JSON_PROPERTY_COLLAPSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollapse(@jakarta.annotation.Nullable Boolean collapse) {
    this.collapse = collapse;
  }

  public FieldGroup params(@jakarta.annotation.Nullable Map<String, Object> params) {
    
    this.params = params;
    return this;
  }

  public FieldGroup putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

  /**
   * Get params
   * @return params
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getParams() {
    return params;
  }


  @JsonProperty(JSON_PROPERTY_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParams(@jakarta.annotation.Nullable Map<String, Object> params) {
    this.params = params;
  }

  public FieldGroup localizedLabel(@jakarta.annotation.Nullable String localizedLabel) {
    
    this.localizedLabel = localizedLabel;
    return this;
  }

  /**
   * Get localizedLabel
   * @return localizedLabel
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALIZED_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocalizedLabel() {
    return localizedLabel;
  }


  @JsonProperty(JSON_PROPERTY_LOCALIZED_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalizedLabel(@jakarta.annotation.Nullable String localizedLabel) {
    this.localizedLabel = localizedLabel;
  }

  public FieldGroup fields(@jakarta.annotation.Nullable List<String> fields) {
    
    this.fields = fields;
    return this;
  }

  public FieldGroup addFieldsItem(String fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFields(@jakarta.annotation.Nullable List<String> fields) {
    this.fields = fields;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldGroup fieldGroup = (FieldGroup) o;
    return Objects.equals(this.name, fieldGroup.name) &&
        Objects.equals(this.label, fieldGroup.label) &&
        Objects.equals(this.description, fieldGroup.description) &&
        Objects.equals(this.icon, fieldGroup.icon) &&
        Objects.equals(this.index, fieldGroup.index) &&
        Objects.equals(this.collapse, fieldGroup.collapse) &&
        Objects.equals(this.params, fieldGroup.params) &&
        Objects.equals(this.localizedLabel, fieldGroup.localizedLabel) &&
        Objects.equals(this.fields, fieldGroup.fields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, label, description, icon, index, collapse, params, localizedLabel, fields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldGroup {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    collapse: ").append(toIndentedString(collapse)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    localizedLabel: ").append(toIndentedString(localizedLabel)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

