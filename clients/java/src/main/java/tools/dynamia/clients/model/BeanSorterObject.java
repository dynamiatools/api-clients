/*
 * DynamiaTools API
 * DynamiaTools Metadata API
 *
 * The version of the OpenAPI document: 5.3.6
 * Contact: mario@dynamiasoluciones.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tools.dynamia.clients.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BeanSorterObject
 */
@JsonPropertyOrder({
  BeanSorterObject.JSON_PROPERTY_ASCENDING,
  BeanSorterObject.JSON_PROPERTY_COLUMN_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-13T13:21:28.528898514-05:00[America/Bogota]", comments = "Generator version: 7.12.0")
public class BeanSorterObject {
  public static final String JSON_PROPERTY_ASCENDING = "ascending";
  @jakarta.annotation.Nullable
  private Boolean ascending;

  public static final String JSON_PROPERTY_COLUMN_NAME = "columnName";
  @jakarta.annotation.Nullable
  private String columnName;

  public BeanSorterObject() {
  }

  public BeanSorterObject ascending(@jakarta.annotation.Nullable Boolean ascending) {
    
    this.ascending = ascending;
    return this;
  }

  /**
   * Get ascending
   * @return ascending
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASCENDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAscending() {
    return ascending;
  }


  @JsonProperty(JSON_PROPERTY_ASCENDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAscending(@jakarta.annotation.Nullable Boolean ascending) {
    this.ascending = ascending;
  }

  public BeanSorterObject columnName(@jakarta.annotation.Nullable String columnName) {
    
    this.columnName = columnName;
    return this;
  }

  /**
   * Get columnName
   * @return columnName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLUMN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColumnName() {
    return columnName;
  }


  @JsonProperty(JSON_PROPERTY_COLUMN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColumnName(@jakarta.annotation.Nullable String columnName) {
    this.columnName = columnName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeanSorterObject beanSorterObject = (BeanSorterObject) o;
    return Objects.equals(this.ascending, beanSorterObject.ascending) &&
        Objects.equals(this.columnName, beanSorterObject.columnName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ascending, columnName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeanSorterObject {\n");
    sb.append("    ascending: ").append(toIndentedString(ascending)).append("\n");
    sb.append("    columnName: ").append(toIndentedString(columnName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

