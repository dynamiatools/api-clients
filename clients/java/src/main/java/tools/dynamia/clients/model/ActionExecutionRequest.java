/*
 * DynamiaTools API
 * DynamiaTools Metadata API
 *
 * The version of the OpenAPI document: 5.3.6
 * Contact: mario@dynamiasoluciones.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tools.dynamia.clients.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ActionExecutionRequest
 */
@JsonPropertyOrder({
  ActionExecutionRequest.JSON_PROPERTY_DATA,
  ActionExecutionRequest.JSON_PROPERTY_PARAMS,
  ActionExecutionRequest.JSON_PROPERTY_SOURCE,
  ActionExecutionRequest.JSON_PROPERTY_DATA_TYPE,
  ActionExecutionRequest.JSON_PROPERTY_DATA_ID,
  ActionExecutionRequest.JSON_PROPERTY_DATA_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class ActionExecutionRequest {
  public static final String JSON_PROPERTY_DATA = "data";
  @jakarta.annotation.Nullable
  private Object data;

  public static final String JSON_PROPERTY_PARAMS = "params";
  @jakarta.annotation.Nullable
  private Map<String, Object> params = new HashMap<>();

  public static final String JSON_PROPERTY_SOURCE = "source";
  @jakarta.annotation.Nullable
  private String source;

  public static final String JSON_PROPERTY_DATA_TYPE = "dataType";
  @jakarta.annotation.Nullable
  private String dataType;

  public static final String JSON_PROPERTY_DATA_ID = "dataId";
  @jakarta.annotation.Nullable
  private String dataId;

  public static final String JSON_PROPERTY_DATA_NAME = "dataName";
  @jakarta.annotation.Nullable
  private String dataName;

  public ActionExecutionRequest() {
  }

  public ActionExecutionRequest data(@jakarta.annotation.Nullable Object data) {
    
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(@jakarta.annotation.Nullable Object data) {
    this.data = data;
  }

  public ActionExecutionRequest params(@jakarta.annotation.Nullable Map<String, Object> params) {
    
    this.params = params;
    return this;
  }

  public ActionExecutionRequest putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

  /**
   * Get params
   * @return params
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getParams() {
    return params;
  }


  @JsonProperty(JSON_PROPERTY_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParams(@jakarta.annotation.Nullable Map<String, Object> params) {
    this.params = params;
  }

  public ActionExecutionRequest source(@jakarta.annotation.Nullable String source) {
    
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(@jakarta.annotation.Nullable String source) {
    this.source = source;
  }

  public ActionExecutionRequest dataType(@jakarta.annotation.Nullable String dataType) {
    
    this.dataType = dataType;
    return this;
  }

  /**
   * Get dataType
   * @return dataType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataType() {
    return dataType;
  }


  @JsonProperty(JSON_PROPERTY_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataType(@jakarta.annotation.Nullable String dataType) {
    this.dataType = dataType;
  }

  public ActionExecutionRequest dataId(@jakarta.annotation.Nullable String dataId) {
    
    this.dataId = dataId;
    return this;
  }

  /**
   * Get dataId
   * @return dataId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataId() {
    return dataId;
  }


  @JsonProperty(JSON_PROPERTY_DATA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataId(@jakarta.annotation.Nullable String dataId) {
    this.dataId = dataId;
  }

  public ActionExecutionRequest dataName(@jakarta.annotation.Nullable String dataName) {
    
    this.dataName = dataName;
    return this;
  }

  /**
   * Get dataName
   * @return dataName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataName() {
    return dataName;
  }


  @JsonProperty(JSON_PROPERTY_DATA_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataName(@jakarta.annotation.Nullable String dataName) {
    this.dataName = dataName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionExecutionRequest actionExecutionRequest = (ActionExecutionRequest) o;
    return Objects.equals(this.data, actionExecutionRequest.data) &&
        Objects.equals(this.params, actionExecutionRequest.params) &&
        Objects.equals(this.source, actionExecutionRequest.source) &&
        Objects.equals(this.dataType, actionExecutionRequest.dataType) &&
        Objects.equals(this.dataId, actionExecutionRequest.dataId) &&
        Objects.equals(this.dataName, actionExecutionRequest.dataName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, params, source, dataType, dataId, dataName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionExecutionRequest {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    dataId: ").append(toIndentedString(dataId)).append("\n");
    sb.append("    dataName: ").append(toIndentedString(dataName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

