/*
 * DynamiaTools API
 * DynamiaTools Metadata API
 *
 * The version of the OpenAPI document: 5.3.6
 * Contact: mario@dynamiasoluciones.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tools.dynamia.clients.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import tools.dynamia.clients.model.ActionRef;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Field
 */
@JsonPropertyOrder({
  Field.JSON_PROPERTY_NAME,
  Field.JSON_PROPERTY_LABEL,
  Field.JSON_PROPERTY_DESCRIPTION,
  Field.JSON_PROPERTY_COMPONENT,
  Field.JSON_PROPERTY_PARAMS,
  Field.JSON_PROPERTY_VISIBLE,
  Field.JSON_PROPERTY_INDEX,
  Field.JSON_PROPERTY_REQUIRED,
  Field.JSON_PROPERTY_ACTION,
  Field.JSON_PROPERTY_ICON,
  Field.JSON_PROPERTY_SHOW_ICON_ONLY,
  Field.JSON_PROPERTY_OPTIONAL,
  Field.JSON_PROPERTY_PATH,
  Field.JSON_PROPERTY_VARIABLE,
  Field.JSON_PROPERTY_ENTITY,
  Field.JSON_PROPERTY_READ_ONLY,
  Field.JSON_PROPERTY_COLLECTION,
  Field.JSON_PROPERTY_LOCALIZED_DESCRIPTION,
  Field.JSON_PROPERTY_LOCALIZED_LABEL,
  Field.JSON_PROPERTY_PROPERTY,
  Field.JSON_PROPERTY_READ_WRITE,
  Field.JSON_PROPERTY_WRITE_ONLY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-13T13:27:54.300070628-05:00[America/Bogota]", comments = "Generator version: 7.12.0")
public class Field {
  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_LABEL = "label";
  @jakarta.annotation.Nullable
  private String label;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_COMPONENT = "component";
  @jakarta.annotation.Nullable
  private String component;

  public static final String JSON_PROPERTY_PARAMS = "params";
  @jakarta.annotation.Nullable
  private Map<String, Object> params = new HashMap<>();

  public static final String JSON_PROPERTY_VISIBLE = "visible";
  @jakarta.annotation.Nullable
  private Boolean visible;

  public static final String JSON_PROPERTY_INDEX = "index";
  @jakarta.annotation.Nullable
  private Integer index;

  public static final String JSON_PROPERTY_REQUIRED = "required";
  @jakarta.annotation.Nullable
  private Boolean required;

  public static final String JSON_PROPERTY_ACTION = "action";
  @jakarta.annotation.Nullable
  private ActionRef action;

  public static final String JSON_PROPERTY_ICON = "icon";
  @jakarta.annotation.Nullable
  private String icon;

  public static final String JSON_PROPERTY_SHOW_ICON_ONLY = "showIconOnly";
  @jakarta.annotation.Nullable
  private Boolean showIconOnly;

  public static final String JSON_PROPERTY_OPTIONAL = "optional";
  @jakarta.annotation.Nullable
  private Boolean optional;

  public static final String JSON_PROPERTY_PATH = "path";
  @jakarta.annotation.Nullable
  private String path;

  public static final String JSON_PROPERTY_VARIABLE = "variable";
  @jakarta.annotation.Nullable
  private String variable;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  @jakarta.annotation.Nullable
  private Boolean entity;

  public static final String JSON_PROPERTY_READ_ONLY = "readOnly";
  @jakarta.annotation.Nullable
  private Boolean readOnly;

  public static final String JSON_PROPERTY_COLLECTION = "collection";
  @jakarta.annotation.Nullable
  private Boolean collection;

  public static final String JSON_PROPERTY_LOCALIZED_DESCRIPTION = "localizedDescription";
  @jakarta.annotation.Nullable
  private String localizedDescription;

  public static final String JSON_PROPERTY_LOCALIZED_LABEL = "localizedLabel";
  @jakarta.annotation.Nullable
  private String localizedLabel;

  public static final String JSON_PROPERTY_PROPERTY = "property";
  @jakarta.annotation.Nullable
  private Boolean property;

  public static final String JSON_PROPERTY_READ_WRITE = "readWrite";
  @jakarta.annotation.Nullable
  private Boolean readWrite;

  public static final String JSON_PROPERTY_WRITE_ONLY = "writeOnly";
  @jakarta.annotation.Nullable
  private Boolean writeOnly;

  public Field() {
  }

  public Field name(@jakarta.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }

  public Field label(@jakarta.annotation.Nullable String label) {
    
    this.label = label;
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(@jakarta.annotation.Nullable String label) {
    this.label = label;
  }

  public Field description(@jakarta.annotation.Nullable String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }

  public Field component(@jakarta.annotation.Nullable String component) {
    
    this.component = component;
    return this;
  }

  /**
   * Get component
   * @return component
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPONENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComponent() {
    return component;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComponent(@jakarta.annotation.Nullable String component) {
    this.component = component;
  }

  public Field params(@jakarta.annotation.Nullable Map<String, Object> params) {
    
    this.params = params;
    return this;
  }

  public Field putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

  /**
   * Get params
   * @return params
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getParams() {
    return params;
  }


  @JsonProperty(JSON_PROPERTY_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParams(@jakarta.annotation.Nullable Map<String, Object> params) {
    this.params = params;
  }

  public Field visible(@jakarta.annotation.Nullable Boolean visible) {
    
    this.visible = visible;
    return this;
  }

  /**
   * Get visible
   * @return visible
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVisible() {
    return visible;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisible(@jakarta.annotation.Nullable Boolean visible) {
    this.visible = visible;
  }

  public Field index(@jakarta.annotation.Nullable Integer index) {
    
    this.index = index;
    return this;
  }

  /**
   * Get index
   * @return index
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndex(@jakarta.annotation.Nullable Integer index) {
    this.index = index;
  }

  public Field required(@jakarta.annotation.Nullable Boolean required) {
    
    this.required = required;
    return this;
  }

  /**
   * Get required
   * @return required
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRequired() {
    return required;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequired(@jakarta.annotation.Nullable Boolean required) {
    this.required = required;
  }

  public Field action(@jakarta.annotation.Nullable ActionRef action) {
    
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActionRef getAction() {
    return action;
  }


  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAction(@jakarta.annotation.Nullable ActionRef action) {
    this.action = action;
  }

  public Field icon(@jakarta.annotation.Nullable String icon) {
    
    this.icon = icon;
    return this;
  }

  /**
   * Get icon
   * @return icon
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(@jakarta.annotation.Nullable String icon) {
    this.icon = icon;
  }

  public Field showIconOnly(@jakarta.annotation.Nullable Boolean showIconOnly) {
    
    this.showIconOnly = showIconOnly;
    return this;
  }

  /**
   * Get showIconOnly
   * @return showIconOnly
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_ICON_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowIconOnly() {
    return showIconOnly;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_ICON_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowIconOnly(@jakarta.annotation.Nullable Boolean showIconOnly) {
    this.showIconOnly = showIconOnly;
  }

  public Field optional(@jakarta.annotation.Nullable Boolean optional) {
    
    this.optional = optional;
    return this;
  }

  /**
   * Get optional
   * @return optional
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOptional() {
    return optional;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptional(@jakarta.annotation.Nullable Boolean optional) {
    this.optional = optional;
  }

  public Field path(@jakarta.annotation.Nullable String path) {
    
    this.path = path;
    return this;
  }

  /**
   * Get path
   * @return path
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPath(@jakarta.annotation.Nullable String path) {
    this.path = path;
  }

  public Field variable(@jakarta.annotation.Nullable String variable) {
    
    this.variable = variable;
    return this;
  }

  /**
   * Get variable
   * @return variable
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VARIABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVariable() {
    return variable;
  }


  @JsonProperty(JSON_PROPERTY_VARIABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariable(@jakarta.annotation.Nullable String variable) {
    this.variable = variable;
  }

  public Field entity(@jakarta.annotation.Nullable Boolean entity) {
    
    this.entity = entity;
    return this;
  }

  /**
   * Get entity
   * @return entity
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(@jakarta.annotation.Nullable Boolean entity) {
    this.entity = entity;
  }

  public Field readOnly(@jakarta.annotation.Nullable Boolean readOnly) {
    
    this.readOnly = readOnly;
    return this;
  }

  /**
   * Get readOnly
   * @return readOnly
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReadOnly() {
    return readOnly;
  }


  @JsonProperty(JSON_PROPERTY_READ_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReadOnly(@jakarta.annotation.Nullable Boolean readOnly) {
    this.readOnly = readOnly;
  }

  public Field collection(@jakarta.annotation.Nullable Boolean collection) {
    
    this.collection = collection;
    return this;
  }

  /**
   * Get collection
   * @return collection
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLLECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCollection() {
    return collection;
  }


  @JsonProperty(JSON_PROPERTY_COLLECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollection(@jakarta.annotation.Nullable Boolean collection) {
    this.collection = collection;
  }

  public Field localizedDescription(@jakarta.annotation.Nullable String localizedDescription) {
    
    this.localizedDescription = localizedDescription;
    return this;
  }

  /**
   * Get localizedDescription
   * @return localizedDescription
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALIZED_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocalizedDescription() {
    return localizedDescription;
  }


  @JsonProperty(JSON_PROPERTY_LOCALIZED_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalizedDescription(@jakarta.annotation.Nullable String localizedDescription) {
    this.localizedDescription = localizedDescription;
  }

  public Field localizedLabel(@jakarta.annotation.Nullable String localizedLabel) {
    
    this.localizedLabel = localizedLabel;
    return this;
  }

  /**
   * Get localizedLabel
   * @return localizedLabel
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALIZED_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocalizedLabel() {
    return localizedLabel;
  }


  @JsonProperty(JSON_PROPERTY_LOCALIZED_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalizedLabel(@jakarta.annotation.Nullable String localizedLabel) {
    this.localizedLabel = localizedLabel;
  }

  public Field property(@jakarta.annotation.Nullable Boolean property) {
    
    this.property = property;
    return this;
  }

  /**
   * Get property
   * @return property
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProperty() {
    return property;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperty(@jakarta.annotation.Nullable Boolean property) {
    this.property = property;
  }

  public Field readWrite(@jakarta.annotation.Nullable Boolean readWrite) {
    
    this.readWrite = readWrite;
    return this;
  }

  /**
   * Get readWrite
   * @return readWrite
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READ_WRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReadWrite() {
    return readWrite;
  }


  @JsonProperty(JSON_PROPERTY_READ_WRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReadWrite(@jakarta.annotation.Nullable Boolean readWrite) {
    this.readWrite = readWrite;
  }

  public Field writeOnly(@jakarta.annotation.Nullable Boolean writeOnly) {
    
    this.writeOnly = writeOnly;
    return this;
  }

  /**
   * Get writeOnly
   * @return writeOnly
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WRITE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWriteOnly() {
    return writeOnly;
  }


  @JsonProperty(JSON_PROPERTY_WRITE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWriteOnly(@jakarta.annotation.Nullable Boolean writeOnly) {
    this.writeOnly = writeOnly;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Field field = (Field) o;
    return Objects.equals(this.name, field.name) &&
        Objects.equals(this.label, field.label) &&
        Objects.equals(this.description, field.description) &&
        Objects.equals(this.component, field.component) &&
        Objects.equals(this.params, field.params) &&
        Objects.equals(this.visible, field.visible) &&
        Objects.equals(this.index, field.index) &&
        Objects.equals(this.required, field.required) &&
        Objects.equals(this.action, field.action) &&
        Objects.equals(this.icon, field.icon) &&
        Objects.equals(this.showIconOnly, field.showIconOnly) &&
        Objects.equals(this.optional, field.optional) &&
        Objects.equals(this.path, field.path) &&
        Objects.equals(this.variable, field.variable) &&
        Objects.equals(this.entity, field.entity) &&
        Objects.equals(this.readOnly, field.readOnly) &&
        Objects.equals(this.collection, field.collection) &&
        Objects.equals(this.localizedDescription, field.localizedDescription) &&
        Objects.equals(this.localizedLabel, field.localizedLabel) &&
        Objects.equals(this.property, field.property) &&
        Objects.equals(this.readWrite, field.readWrite) &&
        Objects.equals(this.writeOnly, field.writeOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, label, description, component, params, visible, index, required, action, icon, showIconOnly, optional, path, variable, entity, readOnly, collection, localizedDescription, localizedLabel, property, readWrite, writeOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Field {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    showIconOnly: ").append(toIndentedString(showIconOnly)).append("\n");
    sb.append("    optional: ").append(toIndentedString(optional)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    variable: ").append(toIndentedString(variable)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    collection: ").append(toIndentedString(collection)).append("\n");
    sb.append("    localizedDescription: ").append(toIndentedString(localizedDescription)).append("\n");
    sb.append("    localizedLabel: ").append(toIndentedString(localizedLabel)).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    readWrite: ").append(toIndentedString(readWrite)).append("\n");
    sb.append("    writeOnly: ").append(toIndentedString(writeOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

