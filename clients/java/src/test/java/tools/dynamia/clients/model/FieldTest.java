/*
 * DynamiaTools API
 * DynamiaTools Metadata API
 *
 * The version of the OpenAPI document: 5.3.6
 * Contact: mario@dynamiasoluciones.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tools.dynamia.clients.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import tools.dynamia.clients.model.ActionRef;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Field
 */
class FieldTest {
    private final Field model = new Field();

    /**
     * Model tests for Field
     */
    @Test
    void testField() {
        // TODO: test Field
    }

    /**
     * Test the property 'name'
     */
    @Test
    void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'label'
     */
    @Test
    void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'description'
     */
    @Test
    void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'component'
     */
    @Test
    void componentTest() {
        // TODO: test component
    }

    /**
     * Test the property 'params'
     */
    @Test
    void paramsTest() {
        // TODO: test params
    }

    /**
     * Test the property 'visible'
     */
    @Test
    void visibleTest() {
        // TODO: test visible
    }

    /**
     * Test the property 'index'
     */
    @Test
    void indexTest() {
        // TODO: test index
    }

    /**
     * Test the property 'required'
     */
    @Test
    void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'action'
     */
    @Test
    void actionTest() {
        // TODO: test action
    }

    /**
     * Test the property 'icon'
     */
    @Test
    void iconTest() {
        // TODO: test icon
    }

    /**
     * Test the property 'showIconOnly'
     */
    @Test
    void showIconOnlyTest() {
        // TODO: test showIconOnly
    }

    /**
     * Test the property 'optional'
     */
    @Test
    void optionalTest() {
        // TODO: test optional
    }

    /**
     * Test the property 'path'
     */
    @Test
    void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'variable'
     */
    @Test
    void variableTest() {
        // TODO: test variable
    }

    /**
     * Test the property 'readOnly'
     */
    @Test
    void readOnlyTest() {
        // TODO: test readOnly
    }

    /**
     * Test the property 'collection'
     */
    @Test
    void collectionTest() {
        // TODO: test collection
    }

    /**
     * Test the property 'entity'
     */
    @Test
    void entityTest() {
        // TODO: test entity
    }

    /**
     * Test the property 'localizedDescription'
     */
    @Test
    void localizedDescriptionTest() {
        // TODO: test localizedDescription
    }

    /**
     * Test the property 'localizedLabel'
     */
    @Test
    void localizedLabelTest() {
        // TODO: test localizedLabel
    }

    /**
     * Test the property 'property'
     */
    @Test
    void propertyTest() {
        // TODO: test property
    }

    /**
     * Test the property 'readWrite'
     */
    @Test
    void readWriteTest() {
        // TODO: test readWrite
    }

    /**
     * Test the property 'writeOnly'
     */
    @Test
    void writeOnlyTest() {
        // TODO: test writeOnly
    }

}
