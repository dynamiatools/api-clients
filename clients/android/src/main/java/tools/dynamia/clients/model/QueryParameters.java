/**
 * DynamiaTools API
 * DynamiaTools Metadata API
 *
 * The version of the OpenAPI document: 5.3.6
 * Contact: mario@dynamiasoluciones.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package tools.dynamia.clients.model;

import java.util.*;
import java.util.HashMap;
import java.util.Map;
import tools.dynamia.clients.model.BeanSorterObject;
import tools.dynamia.clients.model.DataPaginator;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class QueryParameters extends HashMap<String, Object> {
  
  @SerializedName("sorter")
  private BeanSorterObject sorter = null;
  @SerializedName("paginator")
  private DataPaginator paginator = null;
  @SerializedName("autocreateSearcheableStrings")
  private Boolean autocreateSearcheableStrings = null;
  @SerializedName("hints")
  private Map<String, Object> hints = null;
  @SerializedName("depth")
  private Integer depth = null;
  @SerializedName("maxResults")
  private Integer maxResults = null;
  @SerializedName("sortedKeys")
  private List<String> sortedKeys = null;
  @SerializedName("sorted")
  private Boolean sorted = null;
  @SerializedName("empty")
  private Boolean empty = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public BeanSorterObject getSorter() {
    return sorter;
  }
  public void setSorter(BeanSorterObject sorter) {
    this.sorter = sorter;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public DataPaginator getPaginator() {
    return paginator;
  }
  public void setPaginator(DataPaginator paginator) {
    this.paginator = paginator;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getAutocreateSearcheableStrings() {
    return autocreateSearcheableStrings;
  }
  public void setAutocreateSearcheableStrings(Boolean autocreateSearcheableStrings) {
    this.autocreateSearcheableStrings = autocreateSearcheableStrings;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getHints() {
    return hints;
  }
  public void setHints(Map<String, Object> hints) {
    this.hints = hints;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getDepth() {
    return depth;
  }
  public void setDepth(Integer depth) {
    this.depth = depth;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getMaxResults() {
    return maxResults;
  }
  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getSortedKeys() {
    return sortedKeys;
  }
  public void setSortedKeys(List<String> sortedKeys) {
    this.sortedKeys = sortedKeys;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getSorted() {
    return sorted;
  }
  public void setSorted(Boolean sorted) {
    this.sorted = sorted;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getEmpty() {
    return empty;
  }
  public void setEmpty(Boolean empty) {
    this.empty = empty;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryParameters queryParameters = (QueryParameters) o;
    return (this.sorter == null ? queryParameters.sorter == null : this.sorter.equals(queryParameters.sorter)) &&
        (this.paginator == null ? queryParameters.paginator == null : this.paginator.equals(queryParameters.paginator)) &&
        (this.autocreateSearcheableStrings == null ? queryParameters.autocreateSearcheableStrings == null : this.autocreateSearcheableStrings.equals(queryParameters.autocreateSearcheableStrings)) &&
        (this.hints == null ? queryParameters.hints == null : this.hints.equals(queryParameters.hints)) &&
        (this.depth == null ? queryParameters.depth == null : this.depth.equals(queryParameters.depth)) &&
        (this.maxResults == null ? queryParameters.maxResults == null : this.maxResults.equals(queryParameters.maxResults)) &&
        (this.sortedKeys == null ? queryParameters.sortedKeys == null : this.sortedKeys.equals(queryParameters.sortedKeys)) &&
        (this.sorted == null ? queryParameters.sorted == null : this.sorted.equals(queryParameters.sorted)) &&
        (this.empty == null ? queryParameters.empty == null : this.empty.equals(queryParameters.empty));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.sorter == null ? 0: this.sorter.hashCode());
    result = 31 * result + (this.paginator == null ? 0: this.paginator.hashCode());
    result = 31 * result + (this.autocreateSearcheableStrings == null ? 0: this.autocreateSearcheableStrings.hashCode());
    result = 31 * result + (this.hints == null ? 0: this.hints.hashCode());
    result = 31 * result + (this.depth == null ? 0: this.depth.hashCode());
    result = 31 * result + (this.maxResults == null ? 0: this.maxResults.hashCode());
    result = 31 * result + (this.sortedKeys == null ? 0: this.sortedKeys.hashCode());
    result = 31 * result + (this.sorted == null ? 0: this.sorted.hashCode());
    result = 31 * result + (this.empty == null ? 0: this.empty.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryParameters {\n");
    sb.append("  " + super.toString()).append("\n");
    sb.append("  sorter: ").append(sorter).append("\n");
    sb.append("  paginator: ").append(paginator).append("\n");
    sb.append("  autocreateSearcheableStrings: ").append(autocreateSearcheableStrings).append("\n");
    sb.append("  hints: ").append(hints).append("\n");
    sb.append("  depth: ").append(depth).append("\n");
    sb.append("  maxResults: ").append(maxResults).append("\n");
    sb.append("  sortedKeys: ").append(sortedKeys).append("\n");
    sb.append("  sorted: ").append(sorted).append("\n");
    sb.append("  empty: ").append(empty).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
