/**
 * DynamiaTools API
 * DynamiaTools Metadata API
 *
 * The version of the OpenAPI document: 5.3.6
 * Contact: mario@dynamiasoluciones.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package tools.dynamia.clients.model;

import java.util.Map;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ActionRef {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("width")
  private String width = null;
  @SerializedName("visible")
  private Boolean visible = null;
  @SerializedName("label")
  private String label = null;
  @SerializedName("icon")
  private String icon = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("params")
  private Map<String, Object> params = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getWidth() {
    return width;
  }
  public void setWidth(String width) {
    this.width = width;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getVisible() {
    return visible;
  }
  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }
  public void setLabel(String label) {
    this.label = label;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getIcon() {
    return icon;
  }
  public void setIcon(String icon) {
    this.icon = icon;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getParams() {
    return params;
  }
  public void setParams(Map<String, Object> params) {
    this.params = params;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionRef actionRef = (ActionRef) o;
    return (this.id == null ? actionRef.id == null : this.id.equals(actionRef.id)) &&
        (this.width == null ? actionRef.width == null : this.width.equals(actionRef.width)) &&
        (this.visible == null ? actionRef.visible == null : this.visible.equals(actionRef.visible)) &&
        (this.label == null ? actionRef.label == null : this.label.equals(actionRef.label)) &&
        (this.icon == null ? actionRef.icon == null : this.icon.equals(actionRef.icon)) &&
        (this.description == null ? actionRef.description == null : this.description.equals(actionRef.description)) &&
        (this.params == null ? actionRef.params == null : this.params.equals(actionRef.params));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.width == null ? 0: this.width.hashCode());
    result = 31 * result + (this.visible == null ? 0: this.visible.hashCode());
    result = 31 * result + (this.label == null ? 0: this.label.hashCode());
    result = 31 * result + (this.icon == null ? 0: this.icon.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.params == null ? 0: this.params.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionRef {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  width: ").append(width).append("\n");
    sb.append("  visible: ").append(visible).append("\n");
    sb.append("  label: ").append(label).append("\n");
    sb.append("  icon: ").append(icon).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  params: ").append(params).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
